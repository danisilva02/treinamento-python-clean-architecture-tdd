name: Deploy - Treinamento Python Clean Architecture + TDD

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest-arm64
    name: Deploy to ${{ github.event.inputs.environment }}
    env:
      TF_LOG: INFO
      PROJECT_NAME: ${{ vars.PROJECT_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ECR_REGISTRY: ${{ vars.AWS_ECR_REGISTRY }}
    
    steps:
      - name: üìÇ Checkout repository
        uses: actions/checkout@v4

      - name: üßë‚Äçüè≠ Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: üîê Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create AWS ECR repository if not exists
        uses: uspacy/aws-ecr-action@v1
        with:
          repositoryName: ${{ vars.AWS_ECR_REGISTRY }}
          countNumber: 2
          countType: "imageCountMoreThan"

      - name: Determine TAG_VERSION
        id: tag_version
        run: echo "TAG_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: üèóÔ∏è Build, tag, and push image to ECR
        run: |
          echo "Building image for repository: ${{ steps.ecr-login.outputs.registry }}/${{ vars.AWS_ECR_REGISTRY }}:latest"
          docker buildx build --platform linux/arm64 \
            -t ${{ steps.ecr-login.outputs.registry }}/${{ vars.AWS_ECR_REGISTRY }}:latest \
            -t ${{ steps.ecr-login.outputs.registry }}/${{ vars.AWS_ECR_REGISTRY }}:$TAG_VERSION \
            --push . 